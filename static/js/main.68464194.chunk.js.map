{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","addtoCart","product","setState","count","state","cart","concat","console","log","products","axios","get","then","response","data","catch","err","id","this","length","map","className","src","image","alt","category","price","onClick","item","style","marginLeft","title","substr","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAwEeA,E,kDAnEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAoBRC,UAAY,SAACC,GACX,EAAKC,SAAS,CACZC,MAAO,EAAKC,MAAMD,MAAQ,EAC1BE,KAAM,EAAKD,MAAMC,KAAKC,OAAOL,KAE/BM,QAAQC,IAAI,EAAKJ,MAAMC,OAvBvB,EAAKD,MAAQ,CACXK,SAAU,GACVN,MAAO,EACPE,KAAM,IANS,E,gEASE,IAAD,OAClBK,IACGC,IAAI,qCACJC,MAAK,SAACC,GACL,IAAMJ,EAAWI,EAASC,KAC1B,EAAKZ,SAAS,CAAEO,aAChBF,QAAQC,IAAIC,MAGbM,OAAM,SAACC,GAAD,OAAST,QAAQC,IAAIQ,Q,+BAWtB,IAAD,SACP,OACE,gCACE,qBAAKC,GAAG,YAAR,SACGC,KAAKd,MAAMK,SAASU,OACnBD,KAAKd,MAAMK,SAASW,KAAI,SAACnB,GAAD,OACtB,sBAAKoB,UAAU,mBAAmBJ,GAAG,UAArC,UACE,qBAAKI,UAAU,MAAMC,IAAKrB,EAAQsB,MAAOC,IAAI,kBAC7C,6BAAKvB,EAAQwB,WACb,6BAAKxB,EAAQyB,QACb,wBAAQC,QAAS,kBAAM,EAAK3B,UAAUC,IAAtC,2BAJkDA,EAAQgB,OAU9D,qBAAKI,UAAU,mBAAf,SACE,4CAILH,KAAKd,MAAMK,SAASU,OAAS,GAC5B,sBAAKE,UAAU,OAAf,UACE,4BAAIH,KAAKd,MAAMD,QADjB,UAEGe,KAAKd,MAAMC,YAFd,aAEG,EAAiBe,KAAI,SAACQ,GAAD,OACpB,sBAAKP,UAAU,UAAf,UACE,qBAAKQ,MAAO,CAAEC,WAAY,GAA1B,SACE,qBAAKT,UAAU,YAAYC,IAAKM,EAAKL,UAEvC,qCAAW,OAAJK,QAAI,IAAJA,OAAA,EAAAA,EAAMG,MAAMC,OAAO,EAAG,KAAM,yB,GA3DjCC,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.68464194.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      products: [],\r\n      count: 0,\r\n      cart: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"https://fakestoreapi.com/products\")\r\n      .then((response) => {\r\n        const products = response.data;\r\n        this.setState({ products });\r\n        console.log(products);\r\n      })\r\n\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  addtoCart = (product) => {\r\n    this.setState({\r\n      count: this.state.count + 1,\r\n      cart: this.state.cart.concat(product)\r\n    });\r\n    console.log(this.state.cart);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"container\">\r\n          {this.state.products.length ? (\r\n            this.state.products.map((product) => (\r\n              <div className=\"productContainer\" id=\"product\" key={product.id}>\r\n                <img className=\"img\" src={product.image} alt=\"product-store\" />\r\n                <h1>{product.category}</h1>\r\n                <h4>{product.price}</h4>\r\n                <button onClick={() => this.addtoCart(product)}>\r\n                  Add To Cart\r\n                </button>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div className=\"productContainer\">\r\n              <p>Loading</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {this.state.products.length > 0 && (\r\n          <div className=\"cart\">\r\n            <p>{this.state.count}</p>\r\n            {this.state.cart?.map((item) => (\r\n              <div className=\"itemBox\">\r\n                <div style={{ marginLeft: 5 }}>\r\n                  <img className=\"cartImage\" src={item.image} />\r\n                </div>\r\n                <div> {item?.title.substr(0, 10) + \"...\"}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}